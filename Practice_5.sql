--EX1
SELECT B.CONTINENT, FLOOR(AVG(A.POPULATION))
FROM CITY AS A
JOIN COUNTRY AS B 
ON A.COUNTRYCODE=B.CODE
GROUP BY  B.CONTINENT;

--EX2
SELECT  
ROUND(SUM(CASE WHEN B.SIGNUP_ACTION = 'Confirmed' THEN 1 ELSE 0 END)*1.00/COUNT(B.SIGNUP_ACTION),2)
FROM EMAILS AS A
INNER JOIN TEXTS AS B
ON A.EMAIL_ID=B.EMAIL_ID
WHERE A.EMAIL_ID IS NOT NULL

--EX3
select age_bucket,
ROUND((SUM(CASE WHEN activity_type='send' then time_spent else 0 end)/SUM(time_spent))*100.0,2) as send_perc,
ROUND((SUM(CASE WHEN activity_type='open' then time_spent else 0 end)/sum(time_spent))*100.0,2) as open_perc
from activities AS a
inner join age_breakdown AS b
on a.user_id = b.user_id
where a.activity_type in ('send','open')
group by age_bucket;

--EX4
SELECT A.CUSTOMER_ID
FROM Customer_contracts AS A
LEFT JOIN PRODUCTS AS B
ON A.PRODUCT_ID=B.PRODUCT_ID
GROUP BY A.CUSTOMER_ID
HAVING COUNT(DISTINCT(PRODUCT_CATEGORY))=3

--EX5
SELECT e.employee_id,e.name
,count(e2.reports_to) as reports_count
,ROUND(AVG(e2.age*1.0),0) as average_age
FROM employees e 
INNER JOIN employees e2 ON e.employee_id=e2.reports_to
WHERE e2.reports_to IS NOT NULL
GROUP BY e.employee_id,e.name
ORDER BY e.employee_id
--EX6
ELECT A.PRODUCT_NAME, SUM(B.UNIT) AS unit
FROM PRODUCTS AS A
LEFT JOIN ORDERS AS B
ON A.PRODUCT_ID=B.PRODUCT_ID
WHERE B.ORDER_DATE BETWEEN '2020-02-01' AND '2020-02-29'
GROUP BY A.PRODUCT_NAME
HAVING SUM(UNIT) >= 100 

--EX7
SELECT a.page_id
FROM pages as A
left join page_likes as B
on a.page_id = b.page_id
WHERE liked_date IS NULL
ORDER BY b.user_id ASC;

-------MID COURSE--------
--Q1
SELECT DISTINCT REPLACEMENT_COST
FROM FILM;

SELECT MIN( REPLACEMENT_COST)
FROM FILM;

--Q2
SELECT 
CASE 
WHEN replacement_cost BETWEEN 9.99 AND 19.99 THEN 'low'
WHEN replacement_cost BETWEEN 20.00 AND 24.99 THEN 'medium'
ELSE 'high' 
END AS CATEGORY,
COUNT(*)
FROM FILM
GROUP BY CATEGORY

SELECT 
SUM(CASE WHEN replacement_cost BETWEEN 9.99 AND 19.99 THEN 1 ELSE 0 END) AS sum_low
FROM FILM;

--Q3
SELECT A.TITLE, A.LENGTH, C.NAME
FROM FILM AS A
INNER JOIN FILM_CATEGORY AS B ON A.FILM_ID = B.FILM_ID
INNER JOIN CATEGORY AS C ON B.CATEGORY_ID=C.CATEGORY_ID
WHERE NAME IN ('Drama','Sports')
ORDER BY LENGTH DESC;

SELECT C.NAME, MAX(A.LENGTH )
FROM FILM AS A
INNER JOIN FILM_CATEGORY AS B ON A.FILM_ID = B.FILM_ID
INNER JOIN CATEGORY AS C ON B.CATEGORY_ID=C.CATEGORY_ID
WHERE NAME IN ('Drama','Sports')
GROUP BY NAME, LENGTH
ORDER BY LENGTH DESC
LIMIT 1;

--Q4
SELECT C.NAME, COUNT(A.TITLE) AS so_luong
FROM FILM AS A
INNER JOIN FILM_CATEGORY AS B ON A.FILM_ID = B.FILM_ID
INNER JOIN CATEGORY AS C ON B.CATEGORY_ID=C.CATEGORY_ID
GROUP BY NAME
ORDER BY so_luong DESC
LIMIT 1;

--Q5
SELECT A.first_name ||' '|| a.last_name as ten_dien_vien, COUNT(film_id)
FROM actor as A
INNER JOIN FILM_ACTOR as B ON A.actor_id =B.actor_id
GROUP BY ten_dien_vien
ORDER BY COUNT(film_id) DESC
LIMIT 1;

--Q6
SELECT COUNT(address)
FROM address AS a
LEFT JOIN customer AS b
ON a.address_id = b.address_id
WHERE CUSTOMER_ID IS NULL

--Q7
SELECT A.CITY, SUM(D.AMOUNT)
FROM CITY AS A
INNER JOIN ADDRESS AS B ON A.CITY_ID=B.CITY_ID
INNER JOIN CUSTOMER AS C ON B.ADDRESS_ID =C.ADDRESS_ID
INNER JOIN PAYMENT AS D ON C.CUSTOMER_ID = D.CUSTOMER_ID
GROUP BY CITY
ORDER BY SUM(D.AMOUNT) DESC
LIMIT 1;

--Q8
SELECT A.CITY || ',' || E.COUNTRY AS city_and_country, SUM(D.AMOUNT)
FROM CITY AS A
INNER JOIN ADDRESS AS B ON A.CITY_ID=B.CITY_ID
INNER JOIN CUSTOMER AS C ON B.ADDRESS_ID =C.ADDRESS_ID
INNER JOIN PAYMENT AS D ON C.CUSTOMER_ID = D.CUSTOMER_ID
INNER JOIN COUNTRY AS E ON A.COUNTRY_ID=E.COUNTRY_ID
GROUP BY COUNTRY, CITY
ORDER BY SUM(D.AMOUNT) DESC
LIMIT 1;
